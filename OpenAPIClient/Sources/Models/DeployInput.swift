//
// DeployInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct DeployInput: Codable {
    public var chainId: String?
    public var abi: String
    public var bytecode: String
    public var constructorArgs: String?

    public init(chainId: String? = nil, abi: String, bytecode: String, constructorArgs: String? = nil) {
        self.chainId = chainId
        self.abi = abi
        self.bytecode = bytecode
        self.constructorArgs = constructorArgs
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case chainId = "chain_id"
        case abi
        case bytecode
        case constructorArgs = "constructor_args"
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        chainId = try container.decodeIfPresent(String.self, forKey: .chainId)
        abi = try container.decode(String.self, forKey: .abi)
        bytecode = try container.decode(String.self, forKey: .bytecode)
        constructorArgs = try container.decodeIfPresent(String.self, forKey: .constructorArgs)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(chainId, forKey: .chainId)
        try container.encode(abi, forKey: .abi)
        try container.encode(bytecode, forKey: .bytecode)
        try container.encodeIfPresent(constructorArgs, forKey: .constructorArgs)
    }
}
