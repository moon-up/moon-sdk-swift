//
// TransactionInputSupportedParamsTheme.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TransactionInputSupportedParamsTheme: Codable, JSONEncodable, Hashable {

    public var borderRadius: Double?
    public var cardColor: String
    public var secondaryTextColor: String
    public var primaryTextColor: String
    public var secondaryColor: String
    public var primaryColor: String
    public var themeName: String
    public var isDark: Bool

    public init(borderRadius: Double?, cardColor: String, secondaryTextColor: String, primaryTextColor: String, secondaryColor: String, primaryColor: String, themeName: String, isDark: Bool) {
        self.borderRadius = borderRadius
        self.cardColor = cardColor
        self.secondaryTextColor = secondaryTextColor
        self.primaryTextColor = primaryTextColor
        self.secondaryColor = secondaryColor
        self.primaryColor = primaryColor
        self.themeName = themeName
        self.isDark = isDark
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case borderRadius
        case cardColor
        case secondaryTextColor
        case primaryTextColor
        case secondaryColor
        case primaryColor
        case themeName
        case isDark
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(borderRadius, forKey: .borderRadius)
        try container.encode(cardColor, forKey: .cardColor)
        try container.encode(secondaryTextColor, forKey: .secondaryTextColor)
        try container.encode(primaryTextColor, forKey: .primaryTextColor)
        try container.encode(secondaryColor, forKey: .secondaryColor)
        try container.encode(primaryColor, forKey: .primaryColor)
        try container.encode(themeName, forKey: .themeName)
        try container.encode(isDark, forKey: .isDark)
    }
}

