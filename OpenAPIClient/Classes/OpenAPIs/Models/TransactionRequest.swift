//
// TransactionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TransactionRequest: Codable, JSONEncodable, Hashable {

    public var nonce: String?
    public var data: String?
    public var value: String?
    public var to: String?
    public var from: String?
    public var maxFeePerGas: String?
    public var maxPriorityFeePerGas: String?

    public init(nonce: String? = nil, data: String? = nil, value: String? = nil, to: String? = nil, from: String? = nil, maxFeePerGas: String? = nil, maxPriorityFeePerGas: String? = nil) {
        self.nonce = nonce
        self.data = data
        self.value = value
        self.to = to
        self.from = from
        self.maxFeePerGas = maxFeePerGas
        self.maxPriorityFeePerGas = maxPriorityFeePerGas
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case nonce
        case data
        case value
        case to
        case from
        case maxFeePerGas
        case maxPriorityFeePerGas
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(nonce, forKey: .nonce)
        try container.encodeIfPresent(data, forKey: .data)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(to, forKey: .to)
        try container.encodeIfPresent(from, forKey: .from)
        try container.encodeIfPresent(maxFeePerGas, forKey: .maxFeePerGas)
        try container.encodeIfPresent(maxPriorityFeePerGas, forKey: .maxPriorityFeePerGas)
    }
}

